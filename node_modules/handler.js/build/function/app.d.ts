import { Application, RoutePath } from '../app';
import { FunctionContextOptions } from './context';
import { FunctionHandler } from './handler';
export interface FunctionRouteMatch {
    handler: FunctionHandler;
    params: {};
}
export declare class FunctionApplication extends Application {
    use(handler: FunctionHandler): FunctionApplication;
    all(path: RoutePath, ...handlers: FunctionHandler[]): FunctionApplication;
    run(options: FunctionContextOptions): Promise<any>;
    protected _matchRoute(path: string): FunctionRouteMatch[];
}
