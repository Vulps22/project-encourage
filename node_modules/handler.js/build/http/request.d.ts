import { HTTPContext } from './context';
import { HTTPRequestHeaders } from './header';
export interface HTTPRequestOptions {
    body: any;
    context: HTTPContext;
    headers: any;
    method: string;
    params: any;
    path: string;
    proxy: boolean;
    query: any;
    subdomainOffset: number;
}
export declare class HTTPRequest {
    constructor(options: HTTPRequestOptions);
    accepts(...types: any[]): string | string[] | boolean;
    acceptsCharsets(...charsets: any[]): string | string[] | boolean;
    acceptsEncodings(...encodings: any[]): string | string[] | boolean;
    acceptsLanguages(...langs: any[]): string | string[] | boolean;
    readonly body: any;
    readonly charset: string;
    get(field: string): string;
    readonly headers: HTTPRequestHeaders;
    readonly host: string;
    readonly hostname: string;
    readonly ip: string;
    readonly ips: string[];
    is(types: string[]): boolean;
    readonly length: number;
    method: string;
    params: any;
    readonly path: string;
    readonly protocol: string;
    readonly query: any;
    readonly secure: boolean;
    readonly subdomains: string[];
    readonly type: string;
    url: string;
    readonly inspect: any;
    toJSON(): any;
}
