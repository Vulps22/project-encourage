"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var app_1 = require("../app");
var util_1 = require("../util");
var context_1 = require("./context");
var HTTPApplication = (function (_super) {
    __extends(HTTPApplication, _super);
    function HTTPApplication() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HTTPApplication.prototype.use = function (handler) {
        this._middlewares.push(handler);
        return this;
    };
    HTTPApplication.prototype.all = function (path) {
        var handlers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            handlers[_i - 1] = arguments[_i];
        }
        for (var _a = 0, handlers_1 = handlers; _a < handlers_1.length; _a++) {
            var handler = handlers_1[_a];
            this._addRoute(null, path, handler);
        }
        return this;
    };
    HTTPApplication.prototype.delete = function (path) {
        var handlers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            handlers[_i - 1] = arguments[_i];
        }
        for (var _a = 0, handlers_2 = handlers; _a < handlers_2.length; _a++) {
            var handler = handlers_2[_a];
            this._addRoute('DELETE', path, handler);
        }
        return this;
    };
    HTTPApplication.prototype.get = function (path) {
        var handlers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            handlers[_i - 1] = arguments[_i];
        }
        for (var _a = 0, handlers_3 = handlers; _a < handlers_3.length; _a++) {
            var handler = handlers_3[_a];
            this._addRoute('GET', path, handler);
        }
        return this;
    };
    HTTPApplication.prototype.head = function (path) {
        var handlers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            handlers[_i - 1] = arguments[_i];
        }
        for (var _a = 0, handlers_4 = handlers; _a < handlers_4.length; _a++) {
            var handler = handlers_4[_a];
            this._addRoute('HEAD', path, handler);
        }
        return this;
    };
    HTTPApplication.prototype.options = function (path) {
        var handlers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            handlers[_i - 1] = arguments[_i];
        }
        for (var _a = 0, handlers_5 = handlers; _a < handlers_5.length; _a++) {
            var handler = handlers_5[_a];
            this._addRoute('OPTIONS', path, handler);
        }
        return this;
    };
    HTTPApplication.prototype.patch = function (path) {
        var handlers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            handlers[_i - 1] = arguments[_i];
        }
        for (var _a = 0, handlers_6 = handlers; _a < handlers_6.length; _a++) {
            var handler = handlers_6[_a];
            this._addRoute('PATCH', path, handler);
        }
        return this;
    };
    HTTPApplication.prototype.post = function (path) {
        var handlers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            handlers[_i - 1] = arguments[_i];
        }
        for (var _a = 0, handlers_7 = handlers; _a < handlers_7.length; _a++) {
            var handler = handlers_7[_a];
            this._addRoute('POST', path, handler);
        }
        return this;
    };
    HTTPApplication.prototype.put = function (path) {
        var handlers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            handlers[_i - 1] = arguments[_i];
        }
        for (var _a = 0, handlers_8 = handlers; _a < handlers_8.length; _a++) {
            var handler = handlers_8[_a];
            this._addRoute('PUT', path, handler);
        }
        return this;
    };
    HTTPApplication.prototype.run = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var ctx, rewritePath, middlewares, matches, matchedHandlers, handlers, preHandle;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        ctx = new context_1.HTTPContext(options);
                        rewritePath = this._rewritePath(options.path);
                        if (rewritePath) {
                            ctx.res.redirect(rewritePath);
                            return [2 /*return*/, ctx];
                        }
                        middlewares = [_defaultErrorHandler].concat(this._middlewares);
                        matches = this._matchRoute(options.method, options.path);
                        matchedHandlers = matches.map(function (match) { return match.handler; });
                        handlers = middlewares.concat(matchedHandlers);
                        preHandle = function (h, c) { return __awaiter(_this, void 0, void 0, function () {
                            var _i, matches_1, match;
                            return __generator(this, function (_a) {
                                for (_i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
                                    match = matches_1[_i];
                                    if (match.handler === h) {
                                        c.req.params = match.params;
                                        break;
                                    }
                                }
                                return [2 /*return*/];
                            });
                        }); };
                        return [4 /*yield*/, util_1.composeHandlers(handlers, preHandle)(ctx)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, ctx];
                }
            });
        });
    };
    HTTPApplication.prototype._matchRoute = function (method, path) {
        path = util_1.removePrefix(path);
        if (path === null) {
            return null;
        }
        var result = [];
        for (var _i = 0, _a = this._routes; _i < _a.length; _i++) {
            var route = _a[_i];
            var params = route.match(path);
            if (!params) {
                continue;
            }
            if (method && route.method && (method !== route.method)) {
                continue;
            }
            result.push({
                handler: route.handler,
                params: params || {},
            });
        }
        return result;
    };
    return HTTPApplication;
}(app_1.Application));
exports.HTTPApplication = HTTPApplication;
function _defaultErrorHandler(ctx, next) {
    return __awaiter(this, void 0, void 0, function () {
        var err_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, next()];
                case 1:
                    _a.sent();
                    return [3 /*break*/, 3];
                case 2:
                    err_1 = _a.sent();
                    ctx.res.status = err_1.statusCode || err_1.status || 500;
                    ctx.res.body = {
                        message: err_1.message,
                    };
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    });
}
